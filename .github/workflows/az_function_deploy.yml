name: 'az_function_deploy'
run-name: 'az_function_deploy ${{ inputs.code_path }}'
on:
  workflow_call:
    inputs:
      code_path:
        type: string
        required: true
      artifact_name:
        type: string
        default: azure_function
      environment:
        type: string
        required: true
permissions:
  id-token: write
  contents: read
jobs:
  config:
    name: Config ${{ inputs.environment }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.code_path }}
    outputs:
      az_tenant_id: ${{ steps.config.outputs.az_tenant_id }}
      function_apps: ${{ steps.config.outputs.function_apps }}
    steps:
      - uses: actions/checkout@v3
      - name: Config
        id: config
        env:
          CONFIG_FILE: .workflows/config.json
        run: |
          ls $CONFIG_FILE
          echo "az_tenant_id=$(cat $CONFIG_FILE | jq -r .environments.${{ inputs.environment }}.az_tenant_id)" >> $GITHUB_OUTPUT
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "function_apps<<$EOF" >> $GITHUB_OUTPUT
          cat $CONFIG_FILE | jq -r .environments.${{ inputs.environment }}.function_apps >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
      - name: Debug config 
        env:
          CONFIG_FILE: .workflows/config.json
        run: |
          echo config_file=$CONFIG_FILE
          cat $CONFIG_FILE
          echo az_tenant_id=${{ steps.config.outputs.az_tenant_id }}
          echo function_apps="${{ steps.config.outputs.function_apps }}"

  deploy:
    name: Deploy ${{ inputs.environment }} (${{ matrix.function_app_name }}, ${{ matrix.az_subscription_id }})
    if: needs.config.outputs.function_apps != 'null'
    runs-on: ubuntu-latest
    needs: config
    strategy:
      matrix: 
        include: ${{ fromJSON(needs.config.outputs.function_apps) }}
    environment:
      name: ${{ inputs.environment }}
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact_name }}
      # - name: Run az login
      #   run: az login --service-principal --tenant ${{ needs.config.outputs.az_tenant_id }} --username ${{ vars.AZ_CLIENT_ID }} --password "${{ secrets.AZ_CLIENT_SECRET }}"
      # - name: Set subscription
      #   run: az account set --subscription ${{ matrix.az_subscription_id }}
      - name: Run az login
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZ_CLIENT_ID }}
          tenant-id: ${{ needs.config.outputs.az_tenant_id }}
          subscription-id: ${{ matrix.az_subscription_id }}
      - name: Deploy
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ matrix.function_app_name }}
          package: .
