name: 'az_function_deploy'
run-name: 'az_function_deploy ${{ inputs.code_path }}'
on:
  workflow_call:
    inputs:
      code_path:
        type: string
        required: true
      artifact_name:
        type: string
        default: azure_function
      environment:
        type: string
        required: true

jobs:
  config:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.code_path }}
    outputs:
      az_tenant_id: ${{ steps.config.outputs.az_tenant_id }}
      az_subscription_id: ${{ steps.config.outputs.az_subscription_id }}
      function_app_names: ${{ steps.config.outputs.function_app_names }}
    steps:
      - uses: actions/checkout@v3
      - name: Config
        id: config
        env:
          CONFIG_FILE: .workflows/config.json
        run: |
          echo "az_tenant_id=$(cat $CONFIG_FILE | jq -r .environments.${{ inputs.environment }}.az_tenant_id)" >> $GITHUB_OUTPUT
          echo "az_subscription_id=$(cat $CONFIG_FILE | jq -r .environments.${{ inputs.environment }}.az_subscription_id)" >> $GITHUB_OUTPUT
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "function_app_names<<$EOF" >> $GITHUB_OUTPUT
          cat $CONFIG_FILE | jq -r .environments.${{ inputs.environment }}.function_app_names >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
      - name: Debug
        env:
          CONFIG_FILE: .workflows/config.json
        run: |
          echo config_file=$CONFIG_FILE
          cat $CONFIG_FILE
          echo az_tenant_id=${{ steps.config.outputs.az_tenant_id }}=$(cat $CONFIG_FILE | jq -r .environments.${{ inputs.environment }}.az_tenant_id)
          echo az_subscription_id=${{ steps.config.outputs.az_subscription_id }}=$(cat $CONFIG_FILE | jq -r .environments.${{ inputs.environment }}.az_subscription_id)
          echo function_app_names=${{ steps.config.outputs.function_app_names }}
          cat $CONFIG_FILE | jq -r .environments.${{ inputs.environment }}.function_app_names

  deploy:
    runs-on: ubuntu-latest
    needs: config
    strategy:
      matrix:
        function_app: ${{ fromJSON(needs.config.outputs.function_app_names) }}
    environment:
      name: ${{ inputs.environment }}
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact_name }}
      - name: Run az login
        run: az login --service-principal --tenant ${{ needs.config.outputs.az_tenant_id }} --username ${{ vars.AZ_CLIENT_ID }} --password ${{ secrets.AZ_CLIENT_SECRET }}
      - name: Set subscription
        run: az account set --subscription ${{ needs.config.outputs.az_subscription_id }}
      - name: Deploy
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ matrix.function_app }}
          package: .
